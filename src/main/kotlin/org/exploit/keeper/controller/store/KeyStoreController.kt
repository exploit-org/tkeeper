package org.exploit.keeper.controller.store

import jakarta.ws.rs.POST
import jakarta.ws.rs.Path
import jakarta.ws.rs.QueryParam
import org.exploit.keeper.model.request.Store
import org.exploit.keeper.service.core.KeeperStorageService
import org.slf4j.Logger
import org.slf4j.LoggerFactory

@Path("/v1/storage")
class KeyStoreController(private val storage: KeeperStorageService) {
    @POST
    @Path("/store")
    fun store(body: Store) {
        LOGGER.info("Storing share for keyId: ${body.keyId}, curve: ${body.curve}")
        storage.storeShare(body)
    }

    @POST
    @Path("/revert")
    fun revert(@QueryParam("keyId") keyId: String) {
        storage.deleteShare(keyId)
    }

    private companion object {
        val LOGGER: Logger = LoggerFactory.getLogger(KeyStoreController::class.java)
    }
}