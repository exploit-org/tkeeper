package org.exploit.keeper.controller.ecies

import jakarta.ws.rs.Consumes
import jakarta.ws.rs.POST
import jakarta.ws.rs.Path
import jakarta.ws.rs.Produces
import org.exploit.keeper.model.ecies.PartialDecryptRequest
import org.exploit.keeper.model.ecies.PartiallyDecrypted
import org.exploit.keeper.provider.MessagePackProvider
import org.exploit.keeper.service.ecies.ThresholdECIESManager

@Path("/v1/ecies")
class InternalECIESController(private val manager: ThresholdECIESManager) {
    @POST
    @Path("/decrypt")
    @Consumes(MessagePackProvider.MSGPACK_MIME)
    @Produces(MessagePackProvider.MSGPACK_MIME)
    fun partialDecrypt(body: PartialDecryptRequest): PartiallyDecrypted {
        return manager.partialDecrypt(body.keyId, body.cipherType, body.ciphertext, body.participants)
    }
}