package org.exploit.keeper.service.ecies.cipher

import jakarta.inject.Singleton
import org.exploit.keeper.constant.KeeperCurve
import org.exploit.keeper.db.RocksKeyDB
import org.exploit.keeper.service.client.TKeeperClients
import org.exploit.keeper.service.ecies.client.Secp256k1ECIESClientFactory
import org.exploit.keeper.service.ecies.client.ThresholdECIESClientFactory
import org.exploit.keeper.service.pub.PublicKeyService
import org.exploit.secp256k1.Secp256k1PointOps

@Singleton
class Secp256k1ECIESService(
    db: RocksKeyDB, clients: TKeeperClients, publicKeyService: PublicKeyService,
    private val factory: Secp256k1ECIESClientFactory
): ThresholdECIESService<Secp256k1PointOps>(db, clients, publicKeyService) {
    override fun curve(): KeeperCurve<Secp256k1PointOps> = KeeperCurve.SECP256K1

    override fun factory(): ThresholdECIESClientFactory<Secp256k1PointOps> = factory
}