package org.exploit.keeper.service.gg20.initiator

import jakarta.inject.Singleton
import org.exploit.keeper.api.client.BitKeeperClient
import org.exploit.keeper.extension.toMono
import org.exploit.keeper.service.gg20.GG20MtAHandler
import reactor.core.publisher.Flux
import reactor.core.publisher.Mono

@Singleton
class GG20MtAInitiator(private val mta: GG20MtAHandler) {
    fun startMtA(peers: List<BitKeeperClient>, sessionId: String): Mono<List<BitKeeperClient>> {
        return mta.exchange(sessionId)
            .thenMany(Flux.fromIterable(peers))
            .flatMap {
                it.gg20.exchangeMta(sessionId).toMono()
                    .thenReturn(it)
            }
            .collectList()
    }
}