package org.exploit.keeper.service.seal.provider

import org.exploit.keeper.exception.SealedException
import org.exploit.keeper.model.seal.init.SealInitData
import org.exploit.keeper.model.seal.progress.Progress
import org.exploit.keeper.service.key.KeyOps

interface SealProvider {
    val id: String

    val isAuto: Boolean

    fun keyOpsOrNull(): KeyOps?

    fun keyOpsOrThrow(): KeyOps = keyOpsOrNull() ?: throw SealedException()

    fun initialize(): SealInitData

    fun submitPart(payload64: String): Progress

    fun initialProgress(): Progress

    fun unseal(): Progress

    fun seal()
}