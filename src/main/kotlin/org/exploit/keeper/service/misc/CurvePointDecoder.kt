package org.exploit.keeper.service.misc

import jakarta.inject.Singleton
import org.exploit.threshield.curve.EllipticCurveParams
import org.exploit.threshield.curve.PointOps
import org.exploit.threshield.curve.jce.ECCurveParams
import org.exploit.threshield.curve.jce.ECPointOps
import org.exploit.threshield.ed25519.Ed25519CurveParams
import org.exploit.threshield.ed25519.Ed25519PointOps

@Singleton
class CurvePointDecoder {
    fun decode(curve: EllipticCurveParams<*>, bytes: ByteArray): PointOps<*> {
        return when (curve) {
            is ECCurveParams -> ECPointOps(curve.x9ECParameters.curve.decodePoint(bytes))
            is Ed25519CurveParams -> Ed25519PointOps(bytes)

            else -> throw IllegalArgumentException("Unsupported curve type: ${curve.javaClass.name}")
        }
    }
}