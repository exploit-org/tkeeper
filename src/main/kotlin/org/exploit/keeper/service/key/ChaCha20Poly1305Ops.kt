package org.exploit.keeper.service.key

import org.exploit.keeper.extension.use
import org.exploit.sodium.SecretBox
import org.exploit.sodium.cipher.ChaCha20Poly1305Cipher
import java.util.function.Supplier

class ChaCha20Poly1305Ops(private val secretKey: SecretBox, private val memKeySupplier: Supplier<ByteArray>) : KeyOps {
    override fun encrypt(payload: ByteArray): ByteArray {
        return memKeySupplier.get().use { memKey ->
            secretKey.useDecrypted(memKey) {
                ChaCha20Poly1305Cipher.getInstance().encrypt(payload, ByteArray(0), it)
            }
        }
    }

    override fun decrypt(payload: ByteArray): ByteArray {
        return memKeySupplier.get().use { memKey ->
            secretKey.useDecrypted(memKey) {
                ChaCha20Poly1305Cipher.getInstance().decrypt(payload, ByteArray(0), it)
            }
        }
    }
}