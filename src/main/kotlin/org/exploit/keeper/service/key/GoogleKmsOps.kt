package org.exploit.keeper.service.key

import com.google.cloud.kms.v1.CryptoKeyName
import com.google.cloud.kms.v1.KeyManagementServiceClient
import com.google.protobuf.ByteString
import org.exploit.keeper.config.provider.GoogleProviderConfig

class GoogleKmsOps(config: GoogleProviderConfig): KeyOps {
    private val kms by lazy {
        KeyManagementServiceClient.create()
    }

    private val cryptoKeyName = CryptoKeyName.of(
        config.project(), config.location(),
        config.keyRing(), config.cryptoKey()
    )

    override fun encrypt(payload: ByteArray): ByteArray {
        val result = kms.encrypt(cryptoKeyName, ByteString.copyFrom(payload))
        return result.ciphertext.toByteArray()
    }

    override fun decrypt(payload: ByteArray): ByteArray {
        return kms.decrypt(cryptoKeyName, ByteString.copyFrom(payload)).plaintext
            .toByteArray()
    }
}