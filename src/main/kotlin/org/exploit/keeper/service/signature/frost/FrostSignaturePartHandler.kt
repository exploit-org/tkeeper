package org.exploit.keeper.service.signature.frost

import org.exploit.keeper.model.frost.ComputedZ
import org.exploit.tss.curve.PointOps

class FrostSignaturePartHandler<P : PointOps<P>>(
    private val peerId: () -> Int,
    private val sessionFactory: FrostSessionManager<P>
) {
    fun computeZ(sessionId: String): ComputedZ {
        val session = sessionFactory.session(sessionId)
        val z = session.operations.mapValues {
            session.client.signature().computeZ(it.key)
        }

        return ComputedZ(peerId(), z)
    }
}