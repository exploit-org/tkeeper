package org.exploit.keeper.service.signature.gg20

import org.exploit.gmp.BigInt
import org.exploit.keeper.config.KeeperConfig
import org.exploit.keeper.constant.SessionType
import org.exploit.keeper.model.common.Value
import org.exploit.keeper.model.event.SessionCleanEvent
import org.exploit.signalix.manager.EventScope
import org.exploit.tss.curve.ec.WeierstrassPointOps

class GG20SignaturePartHandler<P : WeierstrassPointOps<P>>(
    private val config: KeeperConfig,
    private val eventScope: EventScope,
    private val factory: GG20SessionManager<P>
) {
    fun computePartialS(sessionId: String, finalize: Boolean = false): Value<BigInt> {
        val result = factory.session(sessionId)
            .client
            .signature()
            .computePartialS()
            .let { Value(config.idx(), it) }

        if (finalize) {
            eventScope.call(SessionCleanEvent(sessionId, SessionType.GG20))
        }

        return result
    }
}