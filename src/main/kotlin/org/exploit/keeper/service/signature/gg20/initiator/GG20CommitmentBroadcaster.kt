package org.exploit.keeper.service.signature.gg20.initiator

import jakarta.inject.Singleton
import org.exploit.keeper.api.client.BitKeeperClient
import org.exploit.keeper.extension.toMono
import org.exploit.keeper.service.signature.gg20.GG20CommitmentHandler
import reactor.core.publisher.Flux
import reactor.core.publisher.Mono

@Singleton
class GG20CommitmentBroadcaster(private val handler: GG20CommitmentHandler) {
    fun broadcast(clients: List<BitKeeperClient>, sessionId: String): Mono<List<BitKeeperClient>> {
        return handler.broadcastGammaCommitment(sessionId)
            .thenMany(Flux.fromIterable(clients))
            .flatMap {
                it.gg20.broadcastCommitment(sessionId).toMono()
                    .thenReturn(it)
            }
            .collectList()
    }
}