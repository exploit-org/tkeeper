package org.exploit.keeper.util

import org.exploit.keeper.constant.CurveName
import org.exploit.keeper.model.key.DeserializedKey

object KeySerializer {
    fun serialize(curve: CurveName, privateKey: ByteArray): ByteArray {
        return byteArrayOf(curve.id.toByte()) + privateKey
    }

    fun deserialize(data: ByteArray): DeserializedKey {
        require(data.size >= 2) { "Data too short" }

        val curveId = data[0].toInt() and 0xFF
        val key = data.copyOfRange(1, data.size)

        return DeserializedKey(CurveName.fromId(curveId), key)
    }
}