package org.exploit.keeper.api.auth

import org.eclipse.jetty.client.api.Request
import org.exploit.crypto.Hash
import org.exploit.crypto.curve.Ed25519Provider
import org.exploit.crypto.key.ed25519.Ed25519KeyPair
import org.exploit.jettyx.auth.Authorization
import org.exploit.keeper.extension.toBase64

class KeeperAuthenticator(private val id: Int, private val keyPair: Ed25519KeyPair): Authorization {
    override fun apply(request: Request) {
        val timestamp = System.currentTimeMillis()
        val path = request.path
        val payload = Hash.sha256("$id:$path:$timestamp".toByteArray())

        val signature = Ed25519Provider.getInstance().sign(payload, keyPair)
            .encode()
            .toBase64()

        request.headers {
            it.add(HEADER_INSTANCE_ID, id.toString())
            it.add(HEADER_TIMESTAMP, timestamp.toString())
            it.add(HEADER_SIGNATURE, signature)
        }
    }

    companion object {
        const val HEADER_INSTANCE_ID = "X-INSTANCE-ID"
        const val HEADER_TIMESTAMP = "X-TIMESTAMP"
        const val HEADER_SIGNATURE = "X-SIGNATURE"
    }
}