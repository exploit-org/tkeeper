package org.exploit.keeper.filter.matcher

import com.github.benmanes.caffeine.cache.Cache
import com.github.benmanes.caffeine.cache.Caffeine

class AntPathMatcher private constructor(
    private val matcher: PathMatcher,
    private val cache: Cache<String, Boolean>
) {
    constructor(pattern: String, cacheSize: Int) : this(
        PathMatcher(pattern),
        Caffeine.newBuilder().maximumSize(cacheSize.toLong()).build<String, Boolean>()
    )

    constructor(pattern: String) : this(pattern, 128)

    fun matches(path: String): Boolean =
        cache.get(path) { matcher.match(it) }

    companion object {
        fun of(path: String): AntPathMatcher = AntPathMatcher(path)
    }
}