package org.exploit.keeper.producer

import jakarta.enterprise.inject.Produces
import jakarta.inject.Singleton
import org.exploit.keeper.service.auth.NoOpMachineAuthenticator
import org.exploit.keeper.service.auth.RequestAuthenticator
import org.exploit.keeper.service.auth.factory.MachineAuthenticatorFactory
import org.slf4j.Logger
import org.slf4j.LoggerFactory

@Singleton
class AuthProducer(private val factory: MachineAuthenticatorFactory) {
    @Produces
    @Singleton
    fun authenticator(): RequestAuthenticator =
        factory.createAuthenticator().also {
            if (it is NoOpMachineAuthenticator) {
                LOGGER.warn("Authorization is not configured. Endpoints will be accessible without authentication.")
            }
        }

    private companion object {
        val LOGGER: Logger = LoggerFactory.getLogger(AuthProducer::class.java)
    }
}