package org.exploit.keeper.model.gg20.paillier

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.annotation.JsonDeserialize
import com.fasterxml.jackson.databind.annotation.JsonSerialize
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer
import org.exploit.keeper.extension.decodeBase64
import org.exploit.zktrust.proof.pallier.model.proof.PaillierRespondentProof
import java.math.BigInteger

data class PaillierRespondentProofDto(
    val z64: String = "",

    @JsonProperty("zprime64")
    val zPrime64: String = "",
    val t64: String = "",
    val v64: String = "",
    val w64: String = "",
    val s64: String = "",

    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val s1: BigInteger = BigInteger.ZERO,

    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val s2: BigInteger = BigInteger.ZERO,

    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val t1: BigInteger = BigInteger.ZERO,

    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val t2: BigInteger = BigInteger.ZERO
) {
    fun unwrap(): PaillierRespondentProof = PaillierRespondentProof(
        z64.decodeBase64(), zPrime64.decodeBase64(), t64.decodeBase64(),
        v64.decodeBase64(), w64.decodeBase64(), s64.decodeBase64(),
        s1, s2, t1, t2
    )
}