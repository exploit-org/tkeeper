package org.exploit.keeper.model.gg20.mta

import com.fasterxml.jackson.databind.annotation.JsonDeserialize
import com.fasterxml.jackson.databind.annotation.JsonSerialize
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer
import org.exploit.keeper.model.gg20.paillier.PaillierRespondentProofDto
import org.exploit.zktrust.mta.model.MtAResult
import java.math.BigInteger

data class MtAResultDto(
    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val c: BigInteger = BigInteger.ZERO,

    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val y: BigInteger = BigInteger.ZERO,

    @JsonSerialize(using = ToStringSerializer::class)
    @JsonDeserialize(using = NumberDeserializers.BigIntegerDeserializer::class)
    val r: BigInteger = BigInteger.ZERO,

    val proofDto: PaillierRespondentProofDto? = null
) {
    fun unwrap(): MtAResult = MtAResult(
        c, y, r,
        proofDto?.unwrap()
    )
}